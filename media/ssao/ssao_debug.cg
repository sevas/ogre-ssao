struct VIn
{
    float4 p   : POSITION;
    float3 n   : NORMAL;
    float2 uv  : TEXCOORD0;
};

struct VOut
{
    float4 p   : POSITION;
    float2 uv  : TEXCOORD0;
};

struct PIn
{
    float2 uv  : TEXCOORD0;
};



VOut ssao_debug_vs(VIn IN, uniform float4x4 wvp)
{
    VOut OUT;
    OUT.p = mul(wvp, IN.p);
    // clean up inaccuracies for the UV coords
    float2 uv = sign(IN.p);
    // convert to image space
    uv = (float2(uv.x, -uv.y) + 1.0) * 0.5;
    OUT.uv = uv;
    // calculate the correct ray (modify XY parameters based on screen-space quad XY)
    return OUT;
}


float4 ssao_debug_ps(
    PIn IN,
    uniform float4x4 ptMat,
    uniform sampler2D geomMap : TEXUNIT0
    ,uniform sampler2D  ssaoResult: TEXUNIT1
    ,uniform sampler2D diffuseOnly : TEXUNIT2
    ,uniform sampler2D finalScene : TEXUNIT3
    ): COLOR0
{

    return tex2D(ssaoResult, IN.uv);
}
